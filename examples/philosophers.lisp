(define-actor phil (l r (sticks 0)) (m)
  (if (zerop sticks)
      (progn
	(format t "Got one")
	(incf sticks))
      (progn 
	(format t "Got both")
	(send l (make-drop self)) (send r (make-drop self))
	(format t "Dropped")
	(send l (make-pick self)) (send r (make-pick self))
	(setf sticks 0))))

(define-actor chopstick ((h nil) (w nil)) (m)
  (if (pick? m)
      (if (null h)
	  (progn (send (get-phil m) nil) 
		 (setf h (get-phil m) w nil))
	  (progn (setf w (get-phil m)))))
  (if (drop? m)
      (if (null w)
	  (progn (setf w nil h nil))
	  (progn (send w nil)
		 (setf h w w nil)))))

(defun make-drop (cust) `("drop" ,cust))
(defun make-pick (cust) `("pick" ,cust)) 
(defun pick? (x) (equal (first x) "pick"))
(defun drop? (x) (equal (first x) "drop"))
(defun get-phil (m) (second m))
