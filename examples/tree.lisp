(define-actor joincont (customer (firstnum nil)) (message)
  (if (null firstnum)
      (progn (setf firstnum message))
      (progn (send customer (* firstnum message)) #'sink)))

(define-actor treeprod () 
  (guard (list target tree) (atom tree)) (send target tree)
  (list target (list left right)) (let ((newcust (joincont :customer target))
					(lp (treeprod))
					(rp (treeprod)))
				    (send lp newcust left)
				    (send lp newcust right)))